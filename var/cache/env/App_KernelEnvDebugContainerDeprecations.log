a:21:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:337:"Method "Symfony\Contracts\Service\ServiceSubscriberInterface::getSubscribedServices()" might add "array" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:84:"C:\Users\romai\Dropbox\symfonyGnosys\src\Controller\Admin\CandidatCrudController.php";s:4:"line";i:12;s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:342:"Method "Symfony\Contracts\Service\ServiceSubscriberInterface::getSubscribedServices()" might add "array" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractDashboardController" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:81:"C:\Users\romai\Dropbox\symfonyGnosys\src\Controller\Admin\DashboardController.php";s:4:"line";i:27;s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:348:"Method "Symfony\Component\Config\Definition\ConfigurationInterface::getConfigTreeBuilder()" might add "TreeBuilder" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\DependencyInjection\Configuration" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:307:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:307:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:307:"Method "Symfony\Component\Console\Command\Command::execute()" might add "int" as a native return type declaration in the future. Do the same in child class "EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:318:"Method "Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerInterface::isOptional()" might add "bool" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\Cache\CacheWarmer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:312:"Method "Symfony\Component\HttpKernel\CacheWarmer\WarmableInterface::warmUp()" might add "array" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\Cache\CacheWarmer" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:327:"Method "Symfony\Component\HttpKernel\DataCollector\DataCollectorInterface::getName()" might add "string" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\Inspector\DataCollector" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Twig\Extension\ExtensionInterface::getFunctions()" might add "array" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:16384;s:7:"message";s:301:"Method "Twig\Extension\ExtensionInterface::getFilters()" might add "array" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:16384;s:7:"message";s:345:"Method "Symfony\Component\HttpKernel\Controller\ArgumentValueResolverInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:16384;s:7:"message";s:348:"Method "Symfony\Component\HttpKernel\Controller\ArgumentValueResolverInterface::resolve()" might add "iterable" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:16384;s:7:"message";s:347:"Method "Symfony\Component\HttpKernel\Controller\ArgumentValueResolverInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\BatchActionDtoResolver" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\HttpKernel\Controller\ArgumentValueResolverInterface::resolve()" might add "iterable" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\BatchActionDtoResolver" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:15;a:6:{s:4:"type";i:16384;s:7:"message";s:314:"Method "Symfony\Component\Security\Core\Authorization\Voter\Voter::supports()" might add "bool" as a native return type declaration in the future. Do the same in child class "EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:16;a:6:{s:4:"type";i:16384;s:7:"message";s:321:"Method "Symfony\Component\Security\Core\Authorization\Voter\Voter::voteOnAttribute()" might add "bool" as a native return type declaration in the future. Do the same in child class "EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:17;a:6:{s:4:"type";i:16384;s:7:"message";s:308:"Method "Symfony\Component\Form\FormTypeInterface::getBlockPrefix()" might add "string" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:18;a:6:{s:4:"type";i:16384;s:7:"message";s:277:"Method "ArrayAccess::offsetGet()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\Collection\FieldCollection" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:19;a:6:{s:4:"type";i:16384;s:7:"message";s:278:"Method "ArrayAccess::offsetGet()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "EasyCorp\Bundle\EasyAdminBundle\Collection\FilterCollection" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}i:20;a:6:{s:4:"type";i:16384;s:7:"message";s:226:"The "Symfony\Bridge\Doctrine\Logger\DbalLogger" class implements "Doctrine\DBAL\Logging\SQLLogger" that is deprecated Use {@link \Doctrine\DBAL\Logging\Middleware} or implement {@link \Doctrine\DBAL\Driver\Middleware} instead.";s:4:"file";s:86:"C:\Users\romai\Dropbox\symfonyGnosys\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:1:{s:8:"function";s:17:"spl_autoload_call";}}s:5:"count";i:1;}}